version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout

      - type: cache-restore
        name: Restore bundle cache
        key: myapp-bundle-{{ checksum "Gemfile.lock" }}

      - type: cache-restore
        name: Restore yarn cache
        key: myapp-yarn-{{ checksum "yarn.lock" }}

      - run:
          name: Bundle Install
          command: bin/bundle install --path vendor/bundle

      - run:
          name: Yarn Install
          command: yarn install

      - type: cache-save
        name: Store bundle cache
        key: myapp-bundle-{{ checksum "Gemfile.lock" }}
        paths:
          - vendor/bundle

      - type: cache-save
        name: Store yarn cache
        key: myapp-yarn-{{ checksum "yarn.lock" }}
        paths:
          - ~/.yarn-cache

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3000 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Run tests
          command: bin/rails test
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      # see: https://devcenter.heroku.com/articles/container-registry-and-runtime#using-a-ci-cd-platform
      - run:
          name: "build docker image"
          command: docker build --rm=false -t registry.heroku.com/glacial-everglades-56011/web .
      - run:
          name: setup heroku command
          command: bash .circleci/setup_heroku.sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app glacial-everglades-56011
      - run:
          # HEROKU_AUTH_TOKEN is generated by `heroku auth:token`
          name: "push container to registry.heroku.com"
          command: |
            docker login --username=_ --password=8638eb02-16b1-43aa-b409-a02274866f05 registry.heroku.com
            docker push registry.heroku.com/glacial-everglades-56011/web
      - run:
          name: heroku db migrate
          command: heroku run rails db:migrate --app glacial-everglades-56011
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app glacial-everglades-56011
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
